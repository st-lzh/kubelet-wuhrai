# kubelet-wuhrai 扩展版本环境变量配置示例
# 复制此文件为 .env 并填入实际的API密钥

# ===========================================
# AI模型API密钥配置 (至少需要配置一个)
# ===========================================

# DeepSeek API密钥 (推荐，默认模型)
DEEPSEEK_API_KEY=your_deepseek_api_key_here

# 通义千问 DashScope API密钥
DASHSCOPE_API_KEY=your_dashscope_api_key_here

# 字节跳动豆包 Volces API密钥
VOLCES_API_KEY=your_volces_api_key_here

# OpenAI API密钥 (用于兼容模式)
OPENAI_API_KEY=your_openai_api_key_here

# ===========================================
# 应用配置
# ===========================================

# 日志级别 (debug, info, warn, error)
LOG_LEVEL=info

# 最大迭代次数
MAX_ITERATIONS=10

# 超时设置 (秒)
TIMEOUT=60

# 跳过权限确认 (开发环境可设为true)
SKIP_PERMISSIONS=false

# ===========================================
# 监控配置 (可选)
# ===========================================

# Grafana管理员密码
GRAFANA_PASSWORD=admin123

# Redis密码
REDIS_PASSWORD=kubelet-wuhrai-redis

# ===========================================
# 网络配置
# ===========================================

# HTTP代理 (如果需要)
# HTTP_PROXY=http://proxy.company.com:8080
# HTTPS_PROXY=http://proxy.company.com:8080
# NO_PROXY=localhost,127.0.0.1,.local

# ===========================================
# MCP配置 (可选)
# ===========================================

# MCP服务器认证token
# MCP_TOKEN=your_mcp_token_here

# GitHub token (用于MCP GitHub集成)
# GITHUB_TOKEN=your_github_token_here

# ===========================================
# 自定义配置
# ===========================================

# 自定义LLM端点 (用于VLLM等)
# OPENAI_ENDPOINT=http://your-vllm-server:8000/v1

# 自定义配置文件路径
# KUBELET_WUHRAI_CONFIG=/path/to/custom/config.yaml

# 自定义工具配置路径
# KUBELET_WUHRAI_TOOLS_CONFIG=/path/to/custom/tools.yaml

# ===========================================
# 使用说明
# ===========================================

# 1. 复制此文件为 .env:
#    cp .env.example .env

# 2. 编辑 .env 文件，填入实际的API密钥

# 3. 启动服务:
#    docker-compose up -d

# 4. 访问Web界面:
#    http://localhost:8888

# 5. 启动监控 (可选):
#    docker-compose --profile monitoring up -d

# 6. 启动缓存 (可选):
#    docker-compose --profile cache up -d
